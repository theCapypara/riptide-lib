# Linting, formatting, type checks
name: Linting

on:
  push:
    branches:
      - master
      - release
    tags:
      - "*"
  pull_request: { }

jobs:
  linting:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with ruff
        run: ruff check --output-format=github .

  code-formatting:
    runs-on: ubuntu-latest
    name: Code Format
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r requirements.txt
      - name: Check with ruff
        run: ruff format --check .

  typechecks:
    runs-on: ubuntu-latest
    name: Type Checks
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r requirements.txt
      - name: Run type checks
        run: |
          mypy --config-file pyproject.toml --junit-xml mypy-${{ matrix.python-version }}.xml .
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: MyPy Test Results (Python ${{ matrix.python-version }})
          path: mypy-${{ matrix.python-version }}.xml

  test-event-file:
    name: "Publish Test Results Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
